services:
  recommendation-agent:
    image: recommendation-agent:latest
    container_name: recommendation-agent
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MODEL_NAME=${MODEL_NAME}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SEED_VALUE=${SEED_VALUE}
      - OPENFDA_URL=http://elasticsearch:9200
    volumes:
      - ./data:/app/data:ro
      - ./config:/app/config:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  elasticsearch:
    image: elasticsearch:9.1.2
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - action.auto_create_index=true
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: |
        curl -f http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s || exit 1
      interval: 15s
      timeout: 10s
      retries: 20
      start_period: 60s

  kibana:
    image: kibana:9.1.2
    container_name: kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  elasticsearch_data: